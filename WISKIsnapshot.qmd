---
title: "WISKIsnapshot"
author: "Jane Ho"
format: html
---

```{r, echo = FALSE, warning = FALSE, message = FALSE}
library(leaflet)
library(janitor)
library(tidyr)
library(dplyr)
library(readxl)
library(purrr)
library(ggplot2)
library(viridis)
library(stringr)
library(lubridate)
```

# Structure
- One contiguous file with 3 years data - read & keep stitching onto a datatable, discard any older entries (can always manually re-spec to include timeframe later)
- parse down to (start now w/) one quarter - OR does it make more sense to to land app season vs. winter (roughly semi-annual, but more delay)
- start with highlights (manual & semi-automated text); future -- comparatives with previous year quarter

## seperate endeavour
rough mass accounting via steps in wwtp - however will likely need to be unique for each plant (maybe set up for Stratford as test)

# import
```{r}
#grab all excel names as a character vector, assuming multiple quarterly files will be available.  may need more precision if non wiski files are stored

fnames <- fs::dir_ls('data/3-Inventory/', regexp = '.xlsx')
fnames <- fnames[!grepl("~", fnames)] #remove any temp files with ~
dt_wiskiBSD <- bind_rows(lapply(fnames, read_excel, sheet = "IH_OL_data", col_names = TRUE, trim_ws=TRUE))

#report number of rows
print(nrow(dt_wiskiBSD))
```


# Haulage
Amounts are variously reported under the four parameters: **HaulVol, HaulMass, HaulMassOffSite, and HauledVol** (of which HaulMass only exists in one facility, 5271), with the units either as kg, cubic meter per day, or cubic meter.  The export produces daily values, therefore all values are converted to cubic meter associated with the datestamp.

```{r}
#reduce & normalize dataset
dt_wiskiHaul<-dt_wiskiBSD %>%
  filter(grepl("Haul", parameter)) %>% 
  filter(DailyValue >0 & !is.na(DailyValue)) %>% 
  mutate(Value_m3 = case_when(
    unit == "m³" ~ DailyValue,
    unit == "m³/d"  ~ DailyValue,
    unit == "kg" ~ DailyValue/1000)) %>% 
#StationName will hint which process it came out of (but remove North, South, numericals, and Quality)
  mutate(StationName = str_replace_all(StationName, "[:digit:]", "")) %>% 
  mutate(StationName = str_replace_all(StationName, c("North" = "", "South" = "", "Quality"= "", "data" = ""))) %>% 
    mutate(StationName = str_replace_all(StationName, c("  " = " "))) %>% 
  mutate(StationName = str_trim(StationName))

#prep date aggregation
dt_wiskiHaul$month <- as.Date(cut(dt_wiskiHaul$Date,breaks = "month"))
dt_wiskiHaul$week <-  isoweek(ymd(dt_wiskiHaul$Date))
```

keep sites - later associate w hub

Daily Haulage
provide cluster option
```{r}
dt_wiskiHaul %>% 
  ggplot(aes(x= Date, y = Value_m3)) + #aes b/c will update will be based on variable
  geom_bar(stat = 'identity', aes(fill = StationName))+
  #geom_text(aes(label=Value_m3), vjust= -0.3, size = 3.5)+
  theme_minimal()+
  scale_fill_viridis(discrete = TRUE)

```

```{r}
#aggregate by week - only for geom_text d/s but may be not needed

dt_wiskiHaulWeekly<-
  aggregate(Value_m3~week(Date), data = dt_wiskiHaul, sum)

```

```{r}
  ggplot(data = dt_wiskiHaul, aes(x=week, y=Value_m3 )) + #aes b/c will update will be based on variable
  geom_bar(stat = 'identity', aes(fill = StationName))+
  #geom_text(data=dt_wiskiHaulWeekly, aes(label=Value_m3), vjust= -0.3, size = 3.5)+
  theme_minimal()+
  scale_fill_viridis(discrete = TRUE)+
  scale_x_continuous(breaks=seq(0,53,1) ) +
  labs(x = "Week Number",
       y = "Weekly Volume (m3)",
       title = "Haulage recorded in WISKI, 2025 Q1",
       caption = "(data recorded in kg are divided by 1000 [rough conversion - majority report in cubic meters]) \n minor StationName changes: removed subpartitions & superfluous: numbers, north/south, 'data', 'quality' ")
  #+scale_x_date(date_breaks = "1 month", date_labels = "%b")

#https://forum.posit.co/t/plot-weekly-data-with-monthly-axis-labels/62631/5
```

Stats summary
```{r}

```




Quality - try TS first
range - boxplot amongst plants
pane or filter by process (rely on 2019 canvassing [?] unless metadata shows process changed)

```{r}

fnames <- fs::dir_ls('data/3-Inventory/', regexp = '.xlsx')
fnames <- fnames[!grepl("~", fnames)] #remove any temp files with ~
dt_wiskiLabBSD <- bind_rows(lapply(fnames, read_excel, sheet = "Lab_data", col_names = TRUE, trim_ws=TRUE))

#report number of rows
print(nrow(dt_wiskiLabBSD))

#!! N.B. caution from Aziz:
# sta_num_shortname added manually (not in export)
# station number is a combo of works number and the station # shortname (latter used by lab to upload)
# WA_result_value_unit is the correct value (do NOT use param_unit which is what gets converted by WISKI)  

#reduce & normalize dataset
#exclude Bpd (primary digestion) and Brs (raw sludge), assuming all are in Bslq*, Bsd*, Bth*

dt_wiskiLabBSD<-dt_wiskiLabBSD %>%
  filter(grepl("Bsd|Bslq|Bth", Station_no, ignore.case=T)) %>% 
  filter(grepl("TS", Parameter_Number))%>% #ask Aziz - why is one parameter and the other Parameter_Number
  #note this will grab TSS - but plants reporting TSS at these stations are reporting v. high, borderline max (20000mg/L) method values, suspect they may be TS - include & call out.  There's also 1 or 2 plants reporting MLSS on these stations...leave for now
  #units are almost all mg/L, a few %
  #assume specific gravity of water and biosolids are both equal to one (holds true only when the solids concentration in the biosolids is low), 1% TS = 10,000mg/L
  mutate("Value_mgPerL" = case_when(
    WQ_result_value_unit == "mg/L" ~ Result_Value,
    WQ_result_value_unit == "%"  ~ Result_Value *10000,
    WQ_result_value_unit == "mg/kg"  ~ Result_Value)
    ) 

```

```{r}
#medians by Station_no
(unique(dt_wiskiLabBSD$'Station Name'))
(dt_wiskiLabBSD$`Value mg/L`)

p<-dt_wiskiLabBSD %>%
  ggplot(aes(x=site_Name, y=Value_mgPerL)) +
    geom_boxplot() +
    scale_fill_viridis(discrete = TRUE, alpha=0.6) +
    geom_jitter(color="black", size=0.4, alpha=0.9) +
    theme(axis.text.x  = element_text(angle=90, vjust=0.5, size=5))+
    labs(y = "Values (mg/L)",
       title = "Total Solids in Biosolids (Blsq, Bth, Bsd) stations recorded in WISKI, 2025 Q1",
       caption = "(data recorded in % and mg/kg are divided by 10000, taken on par, respectively, assuming water density  \n Rockland and Espanola record MLSS at biosolids stations and are excluded \n Plants recording TSS on biosolids are assumed to be equiv. to TS")

p
#library(plotly)
#ggplotly(p)

```

